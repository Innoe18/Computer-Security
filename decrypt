/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package compsecurityencryptionproject;

/**
 *
 * @author MyPC
 */

import java.io.File;
import java.io.FileOutputStream;
import java.nio.file.Files;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;
import java.util.Base64;
import java.util.Scanner;

public class decrypt {
    public static void decrypt(Scanner scanner) {
        System.out.println("Decryption method here");

        try {
           
            System.out.print("Enter the filename to decrypt: ");
            String encryptedFileName = scanner.nextLine();

            
            File encryptedFile = new File(encryptedFileName);
            if (!encryptedFile.exists()) {
                System.out.println("Encrypted file not found. Please provide a valid filename.");
                return;
            }

           
            System.out.print("Enter the Base64-encoded key: ");
            String encodedKey = scanner.nextLine();

           
            byte[] keyBytes = Base64.getDecoder().decode(encodedKey);
            SecretKey secretKey = new javax.crypto.spec.SecretKeySpec(keyBytes, "AES");

            
            byte[] encryptedData = Files.readAllBytes(encryptedFile.toPath());

           
            byte[] iv = new byte[16];
            System.arraycopy(encryptedData, 0, iv, 0, iv.length);
            IvParameterSpec ivspec = new IvParameterSpec(iv);

            
            byte[] cipherText = new byte[encryptedData.length - iv.length];
            System.arraycopy(encryptedData, iv.length, cipherText, 0, cipherText.length);

            
            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
            cipher.init(Cipher.DECRYPT_MODE, secretKey, ivspec);

           
            byte[] plainText = cipher.doFinal(cipherText);

        
            try (FileOutputStream outputStream = new FileOutputStream("decryptedfile.txt")) {
                outputStream.write(plainText);
            }

            System.out.println("File decrypted successfully!");
            System.out.println("Decrypted file name: decryptedfile.txt");

        } catch (Exception e) {
            System.out.println("An error occurred during file decryption: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
